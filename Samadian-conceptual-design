Entity Set Candidates: 

Product (This is like literary work in the library. It's the general product being sold)

Item (kind of like book in the library. This is the specific item being bought) 
    XXXX I don't think this will be necessary since we don't really care about a specific item. We just care about the overall data regarding the product. Unlike the library, we're not getting these items back, so there's not really a point in storing them in the database. It's best to just have an attribute in product keeping track of how many in stock. What about handling returns? Orders relationship could do this
    Maybe a database for the warehouse managing this business would require that info. Idk.

Collection  
    XXXX Probably best to just have this be an attribute of product since not much goes into a collection. You can still do the organizing of the website with collection as an attribute.

Category

    Three ways I could go about subcategories of products:
        1. I could have an entity set called product and an entity set called category   which says if it's a hoodie, sock, shoe, hat, necklace etc...
        This could be necessary because sizing is different for different categories of items
        2. The category could just be an attribute of the product called product_type. 
        3. Having the categories be specializations of product. I don't think this one is good because there will just be so many of them. 

Discount
    Product Discount, Collection Discount, Account discount (applied to cart)

        eligibility criteria

Account

Cart
    Probably starts out with a bunch of empty data and stuff gets added on??
    Is most of the stuff in here derived?
    Probably reference account it belongs to.
    Needs to store the items in the cart. 

        Alternative approach would be having a relationship set such as 
        Account Considers Product and the table created from that would be the stuff in the cart.

Orders
    XXXX This is more of a relationship. Account Orders Product. Or even, Account Orders Cart if we consider an order to be the whole cart. 


- I'm confused on orders and cart because these are things that come into play based on the user's interaction with the website. 


Reviews (add this to proposal also)


Product, Account, Discounts, Category, Cart


Account Orders Cart
Cart contains Product
Discount applied on Product
Discount applied on Cart
Product belongs to Category
Product added to Cart 


Concern 1: I feel like I'm missing a bunch of stuff that goes into an ecommerce website






Entity Sets:

Account - This entity set stores the information for any user of the clothing website. Log-in details, payment details, address, etc...

Product - This entity set describes a general product being sold (items with the same name/type of thing we're selling) such as the "Y2K Orbit Hoodie". It doesn't describe a specific item (the single product that gets shipped out). This database doesn't keep track of specific items because they get shipped out and are then gone. 

Category - This entity set describes the types of products that the store has. Entities would look like... hoodie, socks, t-shirt, slides, necklace, etc. 

Cart - This entity set describes an online shopping cart. Items that the user is interested in go into the cart and then when the user desides to make a purchase, they purchase a cart. If they're purchasing 1 item, that's still purchasing a cart but the size of the cart is 1 item.

Discounts - This entity set describes the different types of discounts the store may offer. 
    Specializations:
        Product Discount - Discount applied on a product. The discount may be on 1 product, on products of the same category, or on products of same collection. 

        Cart Discount - Discount applied on a whole cart. May need some eligibility criteria such as minimum part price. 


Relationship Sets:

Account creates cart??????

[P] Account [1] Orders [M] Cart [P]

Participation explanation: An account doesn't need to order a cart and a cart doesn't need to get ordered. It could just be a cart that got forgetten about. So both are partial. 

Cardinality explanation: A cart cannot be ordered by multiple accounts. Even if the cart has the same exact items, no 2 carts are the same. So account is 1. An account can order many carts over time so cart is many.

[P] Cart contains Product [P]

Participation explanation: A cart doesn't need to have a product in it
Cardinality explanation: 

Product belongs to Category

Participation explanation: 
Cardinality explanation: 

Product added to Cart 

Participation explanation: 
Cardinality explanation: 


Discount applied on Product
Discount applied on Cart


Attributes:





Remaining Questions and Conerns:

1. I want it to be possible to browse the website, add items to cart, and make orders without having to make an account right off the bat. How would I go about this?

2. How does an entity set like cart work? It's so dependant on how the user interacts with the website. 